import streamlit as st
import pandas as pd
import plotly.express as px
from openai import OpenAI
from dotenv import load_dotenv
import os

load_dotenv()

openai_api_key = os.getenv("OPENAI_API_KEY")
client = OpenAI(api_key=openai_api_key)

# Personnalisation compl√®te (logo et couleurs)
st.set_page_config(
    page_title="G√©n√©rateur Rapport IA - Beautiful Soul",
    page_icon="üå∫",
    layout="wide"
)

# Logo affich√© en haut de page
st.image("Logo Beautiful Soul Vectoris√©.png", width=200)

# Titres avec couleurs du logo
st.markdown("""
    <h1 style='text-align: center; color: #E7383A;'>üå∫ G√©n√©rateur Automatique de Rapports</h1>
    <h3 style='text-align: center; color: #F29325;'>Gestion du Changement & Leadership</h3>
""", unsafe_allow_html=True)

uploaded_file = st.file_uploader("üìÅ **Importer votre fichier CSV ou Excel**", type=['csv', 'xlsx'])

if uploaded_file:
    if uploaded_file.name.endswith('.csv'):
        data = pd.read_csv(uploaded_file)
    else:
        data = pd.read_excel(uploaded_file)

    st.success("‚úÖ Donn√©es charg√©es avec succ√®s !")
    st.dataframe(data, use_container_width=True)

    if st.button("üß† **G√©n√©rer le Rapport IA**"):
        with st.spinner("‚è≥ G√©n√©ration du rapport en cours..."):

            moyenne = data['Note'].mean()
           
            fig = px.histogram(
                data, x='Note', nbins=5,
                title='üìä Distribution des Notes',
                color_discrete_sequence=['#F29325']
            )
            st.plotly_chart(fig, use_container_width=True)

            commentaires = data['Commentaire'].dropna().tolist()

            prompt = f"""
            Tu es un expert en r√©daction professionnelle en gestion du changement et leadership.

            Voici les r√©sultats d'une √©valuation apr√®s une session :
            - Note moyenne : {moyenne:.2f}/5
            - Commentaires des participants : {commentaires}

            R√©dige un rapport clair, professionnel structur√© ainsi :

            1. **Introduction :** Contexte g√©n√©ral rapide de la session.
            2. **Synth√®se des √©valuations :** Note globale et points forts/faibles mentionn√©s.
            3. **Analyse d√©taill√©e et recommandations concr√®tes :** Points √† garder et am√©liorations pr√©cises √† apporter.
            4. **Conclusion :** R√©sum√© clair et proposition de prochaines √©tapes.

            Utilise un style clair, professionnel et dynamique.
            """

            response = client.chat.completions.create(
                model="gpt-4o",
                messages=[{"role": "system", "content": prompt}]
            )

            rapport = response.choices[0].message.content

            st.markdown("""
                <h2 style='color: #E7383A;'>üìù Rapport G√©n√©r√©</h2>
            """, unsafe_allow_html=True)

            st.markdown(rapport)

            st.download_button(
                "üì• T√©l√©charger le Rapport",
                data=rapport,
                file_name="rapport_session.txt",
                mime="text/plain",
                help="Cliquez pour t√©l√©charger le rapport g√©n√©r√©"
            )

# Style CSS pour les √©l√©ments interactifs
st.markdown("""
<style>
    .stButton > button {
        background-color: #E7383A;
        color: white;
        font-weight: bold;
        border-radius: 10px;
    }
    .stButton > button:hover {
        background-color: #F29325;
        color: white;
    }
    .stFileUploader {
        border-radius: 10px;
    }
</style>
""", unsafe_allow_html=True)
